{
  "env": {
    "browser": true,
    "es2021": true
  },
  "extends": [
    "next/core-web-vitals",
    "airbnb",
    "airbnb/hooks",
    "airbnb-typescript",
    "plugin:storybook/recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    "prettier"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "./tsconfig.json",
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": "latest",
    "sourceType": "module"
  },
  "plugins": [
    "react",
    "@typescript-eslint"
  ],
  "rules": {
    // Отключенные правила
    "react/react-in-jsx-scope": "off",
    "react/jsx-props-no-spreading": "off",
    "react/require-default-props": "off",
    "react/button-has-type": "off",
    "import/prefer-default-export": "off",
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/explicit-module-boundary-types": "off",
    // правило, конечно правильное, но часто input лежит во вложенном компоненте + итак все это знают
    "jsx-a11y/label-has-associated-control": "off",

    // Включенные правила
    "no-restricted-syntax": ["error", "ForInStatement", "LabeledStatement", "WithStatement"],
    "@typescript-eslint/no-unused-vars": "error",
    "import/no-unresolved": "error",
    "import/named": "error",
    "import/namespace": "error",

    // Предупреждения
    "react-hooks/exhaustive-deps": "warn",

    // Исключения
    "@typescript-eslint/no-use-before-define": ["error", {
      "functions": false
    }],
    "import/no-extraneous-dependencies":[
      "error",
      {
        "devDependencies": [
          "**/*.stories.ts",
          "**/*.stories.tsx"
        ]
      }
    ],

    // Большие настраиваемые правила
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "interface",
        "format": ["PascalCase"],
        "custom": {
          "regex": "^I[A-Z]",
          "match": true
        }
      },
      {
        "selector": "enum",
        "format": ["PascalCase"],
        "custom": {
          "regex": "^E[A-Z]",
          "match": true
        }
      }
    ],
    "import/order": [
      "error",
      {
        "groups": ["builtin", "external", "internal", "parent", "sibling", "type", "index"],
        "pathGroups": [
          {
            "pattern": "react",
            "group": "builtin",
            "position": "before"
          },
          {
            "pattern": "@/**",
            "group": "internal"
          },
          {
            "pattern": "./**.module.scss",
            "group": "type",
            "position": "after"
          }
        ],
        "pathGroupsExcludedImportTypes": ["react"], // исключить из стандартной проверки (нужно для переопределения)
        "newlines-between": "always",
        "alphabetize": {
          "order": "asc"
        }
      }
    ]
  }
}
